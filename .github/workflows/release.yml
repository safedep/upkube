name: Container Image Releaser

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version'
        required: true
        default: 'latest'

env:
  GCP_REGISTRY: us-central1-docker.pkg.dev
  GCP_REGISTRY_SA: sd-builds-ga-upkube
  # Google Cloud Artifact Registry uses the format:
  # gcr.io/project-id/repo-name/image-name
  GCP_REGISTRY_IMAGE_NAME: sd-builds-upkube/upkube

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Authenticate with Google Cloud
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{ secrets.ARTIFACTS_REGISTRY_GOOGLE_CLOUD_PROJECT_ID }}
        workload_identity_provider: ${{ secrets.ARTIFACTS_REGISTRY_GOOGLE_CLOUD_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.GCP_REGISTRY_SA }}@${{ secrets.ARTIFACTS_REGISTRY_GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
        token_format: access_token

    - name: Login to GCP Artifacts Registry
      uses: docker/login-action@v3
      with:
        username: oauth2accesstoken
        password: ${{ steps.google-auth.outputs.access_token }}
        registry: ${{ env.GCP_REGISTRY }}

    - name: Determine Release Version
      run: echo "RELEASE_TAG=${{ inputs.release_version }}" >> $GITHUB_ENV

    - name: Check if Release Tag is Not Set
      run: |
        if [ -z "$RELEASE_TAG" ]; then
          echo "RELEASE_TAG is not set. Setting it to 'latest'"
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        fi

    - name: Build Container Image
      run: docker build -t $GCP_REGISTRY/${{ secrets.ARTIFACTS_REGISTRY_GOOGLE_CLOUD_PROJECT_ID }}/$GCP_REGISTRY_IMAGE_NAME:$RELEASE_TAG .
      env:
        RELEASE_TAG: ${{ env.RELEASE_TAG }}

    - name: Push Container Image
      run: docker push $GCP_REGISTRY/${{ secrets.ARTIFACTS_REGISTRY_GOOGLE_CLOUD_PROJECT_ID }}/$GCP_REGISTRY_IMAGE_NAME --all-tags